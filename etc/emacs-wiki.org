#+TITLE: 记录一些 Emacs Wiki
#+STARTUP: overview

* rg
** 而且 rg 这个命令很好用
** rg 搜索 emasc-application-framework 下的所有源代码文件
下面是一个很好的范例
#+BEGIN_SRC sh
  fd -e py -E /app/*/node_modules -I -e el -X rg atomic[_-]edit --color always
#+END_SRC
刚刚发现我甚至不需要先用 fd 来做一次文件过滤，直接 rg 就可以在这么多文件中暴力搜出来，而且用时也差不多！！！（只测试了emasc-application-framework）
#+BEGIN_SRC sh
  rg atomic[_-]edit --hidden --no-ignore
#+END_SRC


** counsel-rg
看了 counsel-rg 的文档发现可以指定参数。

举个例子：
比如，我想搜索隐藏文件中的 "some" 这个字符串
我可以在 counsel-rg 中输入 "some -- --hidden"，这样就可以把 =--hidden= 这个参数传给 rg 了
** deadgrep
在结果界面，选 "glob" 这个按钮，然后输入 =*= 就可以了。应该就是让 rg 搜索所有文件的意思
** rg
直接调用 rg 命令也可以搜到

* 自带的功能

- org-occur :: 
- auto-save-visited-mode :: 自动保存
- subword-mode :: 把 StudlyCapsIdentifiers 当作一个 word
- glasses-mode :: 把 areYouReady 显示成 are_You_Ready
- superword-mode :: 把 this_is_a_symbol 当作一个 word
- list-charset-chars :: 
- shortdoc-display-group ::
- customize-create-theme :: 这个命令可以自己定制一个主题出来，好像还挺好玩的
- profiler-start :: 

* 有用的变量
- mouse-wheel-scroll-amount :: 滚轮和修饰键的组合行为
- mouse-wheel-progressive-speed :: 滚轮速度的行为
- completion-at-point-functions :: 
- org-link-file-path-type ::
- auto-hscroll-mode :: 

* compile emacs

** with native json
#+begin_src sh
  apt install libjansson-dev
#+end_src

** with svg
#+begin_src sh
  sudo apt install librsvg2-dev
#+end_src

* Snippets
[[https://emacs-china.org/t/word/19878][来源（Emacs-China）]]
#+begin_src emacs-lisp
  (setq sentence-end "\\([。！？]\\)[ \t\n]*")
#+end_src

#+begin_src emacs-lisp
  (convert-standard-filename FILENAME)
#+end_src

一个好厉害的命令
#+begin_src emacs-lisp
  quail-show-keyboard-layout
#+end_src
